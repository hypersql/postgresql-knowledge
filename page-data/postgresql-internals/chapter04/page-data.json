{"componentChunkName":"component---src-templates-docs-js","path":"/postgresql-internals/chapter04","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hypersql/postgresql-knowledge/tree/master/src/content"}},"mdx":{"fields":{"id":"be8e952b-a05c-5cc9-96ba-a01f79a0343b","title":"Chapter 4. Foreign Data Wrappers","slug":"/postgresql-internals/chapter04"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Chapter 4. Foreign Data Wrappers\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"PostgreSQL\\uC758 Foreign Data Wrapper(FDW) \\uAE30\\uB2A5\\uC740 remote data access\\uC5D0 \\uB300\\uD55C \\uADDC\\uACA9\\uC778 \", mdx(\"a\", {\n    href: \"https://en.wikipedia.org/wiki/SQL/MED\"\n  }, \"SQL/MED\"), \"\\uAC00 2003\\uB144\\uC5D0 SQL \\uD45C\\uC900\\uC5D0 \\uCD94\\uAC00\\uB41C \\uC774\\uD6C4 PostgreSQL\\uC774 \\uD574\\uB2F9 \\uADDC\\uACA9\\uC744 \\uB9DE\\uCD94\\uAE30 \\uC704\\uD574 \\uAC1C\\uBC1C\\uD558\\uC5EC 9.1 version \\uBD80\\uD130 \\uC81C\\uACF5\\uD558\\uACE0 \\uC788\\uB294 \\uAE30\\uB2A5\\uC785\\uB2C8\\uB2E4. \"), mdx(\"p\", null, \"Remote server\\uC5D0 \\uC788\\uB294 table\\uC744 foreign table\\uC774\\uB77C\\uACE0 \\uBD80\\uB974\\uB294\\uB370, FDW\\uB294 foreign table\\uC744 local table\\uC778 \\uAC83\\uCC98\\uB7FC \\uC870\\uD68C\\uD560 \\uC218 \\uC788\\uB3C4\\uB85D \\uD574\\uC8FC\\uBA70 1.1.2 section\\uC5D0\\uC11C \\uC5B8\\uAE09\\uD588\\uB358 inter-database query\\uC5D0 \\uB300\\uD55C \\uC854\\uC57D\\uC0AC\\uD56D\\uC744 \\uD574\\uC18C\\uD574\\uC8FC\\uB294 \\uAE30\\uB2A5\\uC785\\uB2C8\\uB2E4. FDW\\uB294 extension\\uC758 \\uD615\\uD0DC\\uB85C \\uC81C\\uACF5\\uB418\\uACE0 \\uC788\\uACE0 \\uB2E4\\uC591\\uD55C remote DBMS\\uC5D0 \\uB300\\uD55C extension\\uC774 \\uAC1C\\uBC1C\\uB418\\uC5B4 \\uC788\\uC9C0\\uB9CC, \\uB2E4\\uC218\\uC758 extension\\uC774 \\uC81C\\uB300\\uB85C \\uAD00\\uB9AC\\uB418\\uC5B4 \\uC788\\uC9C0 \\uC54A\\uACE0 PostgreSQL server \\uC0AC\\uC774\\uB97C \\uC5F0\\uACB0\\uD558\\uB294 postgres_fdw\\uB9CC PostgreSQL Global Development Group\\uC5D0 \\uC758\\uD574 \\uACF5\\uC2DD\\uC801\\uC73C\\uB85C \\uAD00\\uB9AC\\uB418\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4. \"), mdx(\"p\", null, \"\\uC774\\uBC88 \\uC7A5\\uC5D0\\uC11C\\uB294 postgres_fdw extension\\uC758 \\uB0B4\\uBD80 \\uB3D9\\uC791\\uC5D0 \\uB300\\uD574\\uC11C \\uC54C\\uC544\\uBCF4\\uB3C4\\uB85D \\uD558\\uACA0\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"hr\", null), mdx(\"h2\", null, \"4.0. TL;DR \\uD83E\\uDD37\"), mdx(\"p\", null, \"4\\uC7A5 \\uB0B4\\uC6A9 \\uC694\\uC57D!\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"FDW\\uB97C \\uC0AC\\uC6A9\\uD558\\uBA74 remote server\\uC5D0 \\uC788\\uB294 table\\uC744 \\uC870\\uD68C\\uD560 \\uC218 \\uC788\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Foreign table\\uC5D0 \\uB300\\uD55C semantic check\\uB294 Executor \\uB2E8\\uACC4\\uC5D0\\uC11C \\uC9C4\\uD589\\uB41C\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"FDW\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC sort, join, aggregate function\\uC744 remote server\\uC5D0\\uC11C \\uC218\\uD589\\uD558\\uB3C4\\uB85D push-down \\uD560 \\uC218 \\uC788\\uB2E4.\")), mdx(\"h2\", null, \"4.1. How to Use \\uD83E\\uDDD1\\u200D\\uD83D\\uDCBB\"), mdx(\"p\", null, \"FDW\\uC5D0 \\uB300\\uD574\\uC11C \\uC124\\uBA85\\uD558\\uAE30 \\uC804\\uC5D0 \\uAC04\\uB7B5\\uD558\\uAC8C postgres_fdw\\uB97C \\uC5B4\\uB5BB\\uAC8C \\uC0AC\\uC6A9\\uD558\\uB294\\uC9C0 \\uC18C\\uAC1C\\uD558\\uACE0 \\uB118\\uC5B4\\uAC00\\uACA0\\uC2B5\\uB2C8\\uB2E4. \\uC544\\uB798 SQL script\\uB97C \\uB530\\uB77C\\uD574\\uBCF4\\uBA74 \\uC27D\\uAC8C foreign table\\uC744 \\uB9CC\\uB4E4\\uC5B4 \\uC0AC\\uC6A9\\uD574\\uBCFC \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"h3\", null, \"4.1.1. Creating Foreign Table\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"-- Install postgres_fdw extension\\nCREATE EXTENSION [IF NOT EXIST] postgres_fdw\\n                 [WITH] [SCHEMA schema_name]\\n                 [VERSION version]\\n                 [FROM old_version];\\n-- e.g. CREATE EXTENSION postgres_fdw;\\n\\n-- Create server\\nCREATE SERVER [server_name]\\nFOREIGN DATA WRAPPER postgres_fdw\\nOPTIONS (HOST '[remote DB host]', PORT '[remote DB port]', DBNAME '[remote DB name]');\\n-- e.g. CREATE SERVER remote_server FOREIGN DATA WRAPPER postgres_fdw\\n--      OPTIONS (HOST '127.0.0.1', PORT '5432', DBNAME 'postgres');\\n\\n-- Create user mapping\\nCREATE USER MAPPING FOR [user_name|USER|CURRENT_USER|PUBLIC]\\nSERVER [server_name]\\nOPTIONS (USER '[remote DB user name]', PASSWORD '[remote DB user password]');\\n-- e.g. CREATE USER MAPPING FOR CURRENT_USER SERVER remote_server\\n--      OPTIONS (USER 'postgres', PASSWORD 'postgres');\\n\\n-- Create foreign table\\nCREATE FOREIGN TABLE [foreign_table_name]([remote table column name] [remote table column type], ... )\\nSERVER [server_name]\\nOPTIONS (SCHEMA_NAME '[remote DB schema name]', TABLE_NAME '[remote DB table name]');\\n-- e.g. CREATE FOREIGN TABLE foreign_tbl(c1 int, c2 varchar, c3 date) SERVER remote_server\\n--      OPTIONS (TABLE_NAME 'test');\\n--      column names need to match with the ones in remote server\\n\")), mdx(\"h3\", null, \"4.1.2. Using Foreign Table\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"-- Select columns from remote table\\nSELECT c1, c2, c3 FROM foreign_tbl;\\n\\n-- Use remote table in a join query\\nSELECT a.c1 FROM foreign_tbl a join local_tbl b on a.c1 = b.c1;\\n\\n-- Insert, delete or update rows with remote table\\nINSERT INTO foreign_tbl VALUES (1, 1, 1);\\nINSERT INTO foreign_tbl VALUES (2, 2, 2);\\nDELETE FROM foreign_tbl WHERE c1 = 1;\\nUPDATE FROM foreign_tbl SET c1 =3 where c1 = 2;\\n\\n-- Execute DDL statements\\nALTER FOREIGN TABLE foreign_tbl ALTER c3 TYPE varchar;\\nALTER FOREIGN TABLE foreign_tbl DROP c3;\\nALTER FOREIGN TABLE foreign_tbl ADD c3 int;\\n\")), mdx(\"h2\", null, \"4.2. FDW Processing \\uD83D\\uDE80\"), mdx(\"p\", null, \"\\uC0AC\\uC6A9\\uBC95\\uC744 \\uC775\\uD614\\uC73C\\uB2C8 \\uB0B4\\uBD80 \\uB3D9\\uC791 \\uC6D0\\uB9AC\\uC5D0 \\uB300\\uD574 \\uBC30\\uC6CC\\uBCF4\\uB3C4\\uB85D \\uD558\\uACA0\\uC2B5\\uB2C8\\uB2E4. \"), mdx(\"p\", null, \"Foreign table\\uC744 \\uC0DD\\uC131\\uD558\\uACE0 \\uC870\\uD68C\\uD558\\uB294 SQL\\uC744 \\uC218\\uD589\\uD558\\uAC8C \\uB418\\uBA74 3\\uC7A5\\uC5D0\\uC11C \\uBC30\\uC6E0\\uB4EF\\uC774 backend process\\uB97C \\uD1B5\\uD574 query processing\\uC774 \\uC774\\uB904\\uC9D1\\uB2C8\\uB2E4. \\uC544\\uB798 \\uAC01\\uAC01\\uC758 backend process module\\uC5D0\\uC11C foreign table\\uC744 \\uC870\\uD68C\\uD558\\uAE30 \\uC704\\uD574 \\uC5B4\\uB5A4 \\uB3D9\\uC791\\uC744 \\uD558\\uB294\\uC9C0 \\uB2E8\\uACC4 \\uBCC4\\uB85C \\uAC04\\uB7B5\\uD558\\uAC8C \\uC694\\uC57D\\uD574\\uBD24\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"figure\", null, \"\\n  \", mdx(\"img\", {\n    parentName: \"figure\",\n    \"src\": \"https://www.interdb.jp/pg/img/fig-4-fdw-2.png\",\n    \"alt\": \"FDW Processing\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"margin\": \"0 auto\"\n    }\n  }), \"\\n  \", mdx(\"figcaption\", {\n    parentName: \"figure\",\n    \"style\": {\n      \"textAlign\": \"center\"\n    }\n  }, \"Fig 4.1 - FDW Processing in a picture\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Parser\\uC640 Analyzer\\uAC00 SQL statement\\uB97C query tree\\uB85C \\uB9CC\\uB4E4\\uC5B4\\uC90D\\uB2C8\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Planner\\uB294 remote server\\uC5D0 \\uBCF4\\uB0BC plain-text SQL statement\\uB97C \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4. \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use_remote_estimate option\\uC774 on\\uC73C\\uB85C \\uCF1C\\uC838 \\uC788\\uC744 \\uACBD\\uC6B0\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"remote server\\uC5D0 connection\\uC744 \\uB9FA\\uC5B4 foreign table\\uC5D0 \\uB300\\uC751\\uB418\\uB294 remote table\\uC5D0 \\uB300\\uD55C semantic check\\uB97C \\uC218\\uD589\\uD569\\uB2C8\\uB2E4. \\uC790\\uC138\\uD55C \\uB0B4\\uC6A9\\uC740 4.2.2\\uC5D0\\uC11C \\uB354 \\uC54C\\uB824\\uB4DC\\uB9AC\\uACA0\\uC2B5\\uB2C8\\uB2E4. \"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use_remote_estimate option\\uC774 off\\uB85C \\uAEBC\\uC838 \\uC788\\uC744 \\uACBD\\uC6B0 (default\\uAC00 off\\uC785\\uB2C8\\uB2E4) \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"foreign table\\uC5D0 \\uB300\\uD55C semantic check\\uB97C \\uC218\\uD589\\uD558\\uC9C0 \\uC54A\\uACE0 deparsing \\uACFC\\uC815\\uC744 \\uD1B5\\uD574 remote SQL statement\\uB97C \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4.\"))))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Executor\\uB294 Planner\\uAC00 \\uB9CC\\uB4E0 plan tree\\uC5D0 \\uC788\\uB294 remote SQL statement\\uB97C remote server\\uB85C \\uBCF4\\uB0B4 \\uC218\\uD589 \\uACB0\\uACFC\\uB97C \\uBC1B\\uC544\\uC640 query processing\\uC5D0 \\uD544\\uC694\\uD55C \\uCC98\\uB9AC\\uB97C \\uC9C4\\uD589\\uD569\\uB2C8\\uB2E4.\")), mdx(\"h3\", null, \"4.2.1. Creating a Query Tree\"), mdx(\"p\", null, \"Query tree\\uB97C \\uB9CC\\uB4E4 \\uB54C\\uB294 foreign table \\uAC1D\\uCCB4\\uC5D0 \\uB300\\uD574\\uC11C\\uB294 semantic check\\uB97C \\uD574\\uC57C \\uD569\\uB2C8\\uB2E4. CREATE FOREIGN TABLE \\uAD6C\\uBB38\\uC744 \\uC0AC\\uC6A9\\uD558\\uC5EC foreign table\\uC744 \\uB9CC\\uB4E4\\uBA74 \\uD574\\uB2F9 foreign table\\uC5D0 \\uB300\\uD55C \\uC815\\uC758\\uB294 pg_class\\uC640 pg_foreign_table catalog\\uC5D0 \\uC800\\uC7A5\\uB418\\uAC8C \\uB429\\uB2C8\\uB2E4. Analyzer\\uB294 \\uB450 catalog table\\uC744 \\uC870\\uD68C\\uD558\\uC5EC foreign table\\uC5D0 \\uB300\\uC751\\uB418\\uB294 remote table\\uC5D0 \\uB300\\uD55C \\uC815\\uBCF4\\uB97C query tree\\uC5D0 \\uC800\\uC7A5\\uD558\\uC5EC Planner\\uC5D0\\uAC8C \\uC804\\uB2EC\\uD574\\uC90D\\uB2C8\\uB2E4.\"), mdx(\"h3\", null, \"4.2.2. Creating a Plan Tree\"), mdx(\"p\", null, \"\\uC55E\\uC11C \\uC5B8\\uAE09\\uD588\\uB358 \\uAC83\\uCC98\\uB7FC FDW\\uB97C \\uC0AC\\uC6A9\\uD558\\uC5EC server \\uAC1D\\uCCB4\\uB97C \\uB9CC\\uB4E4\\uAC8C \\uB418\\uBA74 use_remote_estimate option\\uC744 ALTER SERVER command\\uB85C \\uC124\\uC815\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uC774 option\\uC758 \\uC758\\uBBF8\\uB294 remote SQL statement\\uB97C \\uB9CC\\uB4E4 \\uB54C remote server\\uB85C EXPLAIN command\\uC640 \\uB2E4\\uC591\\uD55C \\uC870\\uD569\\uC758 SQL statement\\uB97C \\uBCF4\\uB0B4 \\uAC01 plan\\uC5D0 \\uB300\\uD55C cost\\uB97C \\uBC1B\\uC544\\uC640 \\uCD5C\\uC801\\uC758 remote SQL statement\\uB97C \\uACB0\\uC815\\uD560 \\uC218 \\uC788\\uB3C4\\uB85D \\uD55C\\uB2E4\\uB294 \\uB73B\\uC785\\uB2C8\\uB2E4. use_remote_estimate option\\uC744 off\\uB85C \\uB04C \\uACBD\\uC6B0 \\uAE30\\uBCF8 \\uC800\\uC7A5\\uB418\\uC5B4 \\uC788\\uB294 cost \\uAC12\\uC744 \\uC0AC\\uC6A9\\uD558\\uC5EC plan tree\\uB97C \\uC0DD\\uC131\\uD558\\uAC8C \\uB429\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"Foreign table\\uC744 \\uC870\\uD68C\\uD558\\uB294 query\\uC5D0 \\uB300\\uD55C plan tree\\uB97C \\uC0DD\\uC131\\uD558\\uBA74 ForeignScan\\uC774\\uB77C\\uB294 plan node\\uAC00 \\uC0DD\\uC131\\uB418\\uAC8C \\uB418\\uACE0, \\uD574\\uB2F9 plan node\\uC5D0 remote\\uB85C \\uBCF4\\uB0BC SQL statement\\uAC00 \\uC800\\uC7A5\\uB418\\uC5B4 Executor module\\uC5D0\\uC11C \\uC2E4\\uD589\\uD560 \\uC218 \\uC788\\uB3C4\\uB85D \\uD569\\uB2C8\\uB2E4. \"), mdx(\"figure\", null, \"\\n  \", mdx(\"img\", {\n    parentName: \"figure\",\n    \"src\": \"https://www.interdb.jp/pg/img/fig-4-fdw-3.png\",\n    \"alt\": \"ForeignScan Plan\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"margin\": \"0 auto\"\n    }\n  }), \"\\n  \", mdx(\"figcaption\", {\n    parentName: \"figure\",\n    \"style\": {\n      \"textAlign\": \"center\"\n    }\n  }, \"Fig 4.2 - ForeignScan Plan\")), mdx(\"h3\", null, \"4.2.3. Executing the Remote SQL Statements\"), mdx(\"p\", null, \"Executor module\\uB85C plan tree\\uAC00 \\uB3C4\\uB2EC\\uD558\\uBA74 remote server\\uC5D0 cursor\\uB97C \\uC0DD\\uC131\\uD558\\uC5EC remote SQL statement\\uB97C \\uB2F4\\uC544 \\uC2E4\\uD589 \\uACB0\\uACFC\\uB97C \\uAC00\\uC838\\uC635\\uB2C8\\uB2E4. \\uC774 \\uB54C \\uC720\\uC758\\uD574\\uC57C \\uD558\\uB294 \\uC810\\uC774 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uBC14\\uB85C transaction isolation level\\uC785\\uB2C8\\uB2E4. \"), mdx(\"p\", null, \"FDW \\uAE30\\uB2A5\\uC744 \\uC0AC\\uC6A9\\uD558\\uC5EC foreign table\\uC744 \\uC870\\uD68C\\uD560 \\uB54C\\uB294 remote server\\uC5D0 isolation level\\uC774 REPEATABLE READ\\uB85C \\uC124\\uC815\\uB41C transaction\\uC744 \\uC5F4\\uC5B4 \\uC870\\uD68C\\uD569\\uB2C8\\uB2E4 (postgres_fdw \\uD55C\\uC815). \\uADF8 \\uC774\\uC720\\uB294 \\uD558\\uB098\\uC758 query \\uB0B4\\uC5D0 \\uC5EC\\uB7EC \\uAC1C\\uC758 foreign table\\uC744 \\uC870\\uD68C\\uD560 \\uC218 \\uC788\\uB294\\uB370 \\uAC01\\uAC01\\uC758 remote server\\uC5D0 \\uB300\\uD574\\uC11C\\uB294 \\uC801\\uC5B4\\uB3C4 REPEATABLE READ level\\uC744 \\uC801\\uC6A9\\uD574\\uC57C \\uAC19\\uC740 read consistency\\uB97C \\uBCF4\\uC7A5\\uD560 \\uC218 \\uC788\\uAE30 \\uB54C\\uBB38\\uC785\\uB2C8\\uB2E4. \\uB9CC\\uC57D local transaction\\uC774 SERIALIZABLE\\uC778 \\uACBD\\uC6B0\\uC5D0\\uB9CC \\uD55C\\uD558\\uC5EC remote transaction\\uC758 isolation level\\uC744 SERIALIZABLE\\uB85C \\uC124\\uC815\\uD558\\uC5EC transaction\\uC744 \\uC5F4\\uC5B4 \\uC90D\\uB2C8\\uB2E4. PostgreSQL\\uC758 transaction isolation level\\uACFC read consistency\\uC5D0 \\uB300\\uD574\\uC11C\\uB294 5\\uC7A5\\uC5D0\\uC11C \\uC790\\uC138\\uD788 \\uB2E4\\uB8E8\\uB3C4\\uB85D \\uD558\\uACA0\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uC608\\uC2DC\\uB85C \\uC544\\uB798\\uC640 \\uAC19\\uC774 foreign table\\uC5D0 \\uB300\\uD574 multi-table join query\\uB97C \\uC218\\uD589\\uD558\\uB824\\uACE0 \\uD558\\uBA74 \\uC544\\uB798 \\uADF8\\uB9BC\\uCC98\\uB7FC \\uACB0\\uACFC\\uB97C \\uBC1B\\uC544\\uC624\\uAC8C \\uB429\\uB2C8\\uB2E4 (tbl_a, tbl_b \\uB294 \\uAC19\\uC740 remote server\\uC5D0 \\uC788\\uB294 foreign table\\uC774\\uB77C\\uACE0 \\uAC00\\uC815\\uD574\\uBCF4\\uACA0\\uC2B5\\uB2C8\\uB2E4).\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT * FROM tbl_a AS a, tbl_b AS b WHERE a.id = b.id AND a.id < 200;\\n\")), mdx(\"figure\", null, \"\\n  \", mdx(\"p\", {\n    parentName: \"figure\",\n    \"align\": \"center\"\n  }, \"\\n  \", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://www.interdb.jp/pg/img/fig-4-fdw-6.png\",\n    \"alt\": \"Multi-table query\",\n    \"style\": {\n      \"display\": \"inline-block\",\n      \"margin\": \"0 auto\",\n      \"height\": \"512px\"\n    }\n  }), \"\\n  \"), \"\\n  \", mdx(\"figcaption\", {\n    parentName: \"figure\",\n    \"style\": {\n      \"textAlign\": \"center\"\n    }\n  }, \"Fig 4.3 - Multi-table query processing with FDW\")), mdx(\"h2\", null, \"4.3. Function Push-down through FDW \\uD83C\\uDFBE\"), mdx(\"p\", null, \"\\uC55E\\uC11C \\uC124\\uBA85\\uD588\\uB4EF\\uC774 server \\uAC1D\\uCCB4\\uC5D0 use_remote_estimate option\\uC744 on\\uC73C\\uB85C \\uC124\\uC815\\uD558\\uBA74 Planner\\uAC00 \\uB2E4\\uC591\\uD55C SQL statement\\uC758 \\uC870\\uD569\\uC5D0 \\uB300\\uD574 EXPLAIN command\\uB97C remote server\\uB85C \\uBCF4\\uB0B4 cost\\uB97C \\uBC1B\\uC544\\uC640 \\uCD5C\\uC801\\uC758 remote SQL statement\\uB97C \\uAD6C\\uD558\\uAC8C \\uB429\\uB2C8\\uB2E4. \\uC774 \\uBC29\\uC2DD\\uC744 \\uD1B5\\uD574 \\uC5BB\\uC744 \\uC218 \\uC788\\uB294 \\uC81C\\uC77C \\uD070 \\uC7A5\\uC810\\uC774 \\uBC14\\uB85C function push-down\\uC785\\uB2C8\\uB2E4. \"), mdx(\"p\", null, \"Function push-down\\uC774\\uB780 join, sort, aggregate function\\uC744 remote\\uC5D0\\uC11C \\uC218\\uD589\\uD558\\uC5EC \\uC218\\uD589 \\uACB0\\uACFC\\uB97C \\uBC1B\\uC544\\uC624\\uB294 \\uAE30\\uB2A5\\uC785\\uB2C8\\uB2E4. \\uAC04\\uB2E8\\uD55C \\uC608\\uB85C MAX()\\uC640 \\uAC19\\uC740 aggregate function\\uC744 local server\\uC5D0\\uC11C\\uB9CC \\uC218\\uD589\\uD574\\uC57C \\uD55C\\uB2E4\\uBA74 remote server\\uB85C \\uBD80\\uD130 \\uBAA8\\uB4E0 tuple\\uC744 network \\uD1B5\\uC2E0\\uC73C\\uB85C \\uBC1B\\uC544\\uC628 \\uD6C4 \\uC218\\uD589\\uD558\\uAC8C \\uB418\\uAE30 \\uB54C\\uBB38\\uC5D0 network \\uBE44\\uC6A9\\uC774 \\uBD80\\uB2F4\\uC2A4\\uB7FD\\uAC8C \\uB429\\uB2C8\\uB2E4. \\uB9CC\\uC57D MAX()\\uB97C remote server\\uC5D0\\uC11C \\uC218\\uD589\\uD560 \\uC218 \\uC788\\uAC8C \\uB41C\\uB2E4\\uBA74 network \\uD1B5\\uC2E0\\uC740 \\uACB0\\uACFC\\uBB3C tuple \\uD55C \\uAC1C\\uB9CC \\uD558\\uBA74 \\uB418\\uAE30 \\uB54C\\uBB38\\uC5D0 cost\\uB97C \\uC0C1\\uB2F9\\uD788 \\uC904\\uC77C \\uC218 \\uC788\\uAC8C \\uB429\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uC544\\uB798 \\uAC04\\uB2E8\\uD55C testcase\\uB4E4\\uC744 \\uD1B5\\uD574 function push-down\\uC774 \\uC5B4\\uB5BB\\uAC8C plan\\uC73C\\uB85C \\uBCF4\\uC5EC\\uC9C0\\uB294\\uC9C0 \\uC0B4\\uD3B4 \\uBCF4\\uACA0\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"h3\", null, \"4.3.1. Join Push-down through FDW\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"-- create foreign tables\\nCREATE FOREIGN TABLE ft1 (c1 int) SERVER remote_server OPTIONS (table_name 't1');\\nCREATE FOREIGN TABLE ft2 (c1 int) SERVER remote_server OPTIONS (table_name 't2');\\n\\n-- set use_remote_estimate off\\nALTER SERVER remote_server OPTIONS (SET use_remote_estimate 'off');\\n\\n-- check remote SQL with EXPLAIN VERBOSE command\\nEXPLAIN VERBOSE SELECT * FROM ft1 JOIN ft2 ON ft1.c1 = ft2.c1;\\n                                   QUERY PLAN                                    \\n---------------------------------------------------------------------------------\\n Merge Join  (cost=732.29..1388.59 rows=42778 width=8)\\n   Output: ft1.c1, ft2.c1\\n   Merge Cond: (ft1.c1 = ft2.c1)\\n   ->  Sort  (cost=366.15..373.46 rows=2925 width=4)\\n         Output: ft1.c1\\n         Sort Key: ft1.c1\\n         ->  Foreign Scan on public.ft1  (cost=100.00..197.75 rows=2925 width=4)\\n               Output: ft1.c1\\n               Remote SQL: SELECT c1 FROM public.t1\\n   ->  Sort  (cost=366.15..373.46 rows=2925 width=4)\\n         Output: ft2.c1\\n         Sort Key: ft2.c1\\n         ->  Foreign Scan on public.ft2  (cost=100.00..197.75 rows=2925 width=4)\\n               Output: ft2.c1\\n               Remote SQL: SELECT c1 FROM public.t2\\n(15 rows)\\n\\n-- set use_remote_estimate on\\nALTER SERVER remote_server OPTIONS (SET use_remote_estimate 'on');\\n\\n-- execute same query\\nEXPLAIN VERBOSE SELECT * FROM ft1 JOIN ft2 ON ft1.c1 = ft2.c1;\\n                                              QUERY PLAN                                              \\n------------------------------------------------------------------------------------------------------\\n Foreign Scan  (cost=1447.00..1887.04 rows=12741 width=8)\\n   Output: ft1.c1, ft2.c1\\n   Relations: (public.ft1) INNER JOIN (public.ft2)\\n   Remote SQL: SELECT r1.c1, r2.c1 FROM (public.t1 r1 INNER JOIN public.t2 r2 ON (((r1.c1 = r2.c1))))\\n(4 rows)\\n\")), mdx(\"h3\", null, \"4.3.2. Sort Push-down through FDW\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"-- ORDER BY seems to be pushed down always\\nALTER SERVER remote_server OPTIONS (SET use_remote_estimate 'off');\\nEXPLAIN VERBOSE SELECT * FROM ft1 ORDER BY c1;\\n                             QUERY PLAN                              \\n---------------------------------------------------------------------\\n Foreign Scan on public.ft1  (cost=100.00..205.60 rows=2925 width=4)\\n   Output: c1\\n   Remote SQL: SELECT c1 FROM public.t1 ORDER BY c1 ASC NULLS LAST\\n(3 rows)\\n\\nALTER SERVER remote_server OPTIONS (SET use_remote_estimate 'off');\\nEXPLAIN VERBOSE SELECT * FROM ft2 ORDER BY c1;\\n                             QUERY PLAN                              \\n---------------------------------------------------------------------\\n Foreign Scan on public.ft2  (cost=279.78..337.16 rows=2550 width=4)\\n   Output: c1\\n   Remote SQL: SELECT c1 FROM public.t2 ORDER BY c1 ASC NULLS LAST\\n(3 rows)\\n\")), mdx(\"h3\", null, \"4.3.3. Aggregate Function Push-down through FDW\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"--- some aggregate functions are pushed down without use_remote_estimate\\nALTER SERVER remote_server OPTIONS (SET use_remote_estimate 'off');\\n\\nEXPLAIN VERBOSE SELECT SUM(c1) FROM ft1;            \\n                     QUERY PLAN                     \\n----------------------------------------------------\\n Foreign Scan  (cost=107.31..146.59 rows=1 width=8)\\n   Output: (sum(c1))\\n   Relations: Aggregate on (public.ft1)\\n   Remote SQL: SELECT sum(c1) FROM public.t1\\n(4 rows)\\n\\n--- some are not!\\nEXPLAIN VERBOSE SELECT MAX(c1) FROM ft1;            \\n                                                 QUERY PLAN                                              \\n------------------------------------------------------------------------------------------------------------\\n Result  (cost=100.04..100.05 rows=1 width=4)\\n   Output: $0\\n   InitPlan 1 (returns $0)\\n     ->  Limit  (cost=100.00..100.04 rows=1 width=4)\\n           Output: ft1.c1\\n           ->  Foreign Scan on public.ft1  (cost=100.00..205.30 rows=2910 width=4)\\n                 Output: ft1.c1\\n                 Remote SQL: SELECT c1 FROM public.t1 WHERE ((c1 IS NOT NULL)) ORDER BY c1 DESC NULLS FIRST\\n(8 rows)\\n\\n-- set use_remote_estimate on to push down max function\\nALTER SERVER remote_server OPTIONS (SET use_remote_estimate 'on');\\n\\nEXPLAIN VERBOSE SELECT MAX(c1) FROM ft1;\\n                     QUERY PLAN                     \\n----------------------------------------------------\\n Foreign Scan  (cost=947.00..947.03 rows=1 width=4)\\n   Output: (max(c1))\\n   Relations: Aggregate on (public.ft1)\\n   Remote SQL: SELECT max(c1) FROM public.t1\\n(4 rows)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#40-tldr-","title":"4.0. TL;DR 🤷"},{"url":"#41-how-to-use-","title":"4.1. How to Use 🧑‍💻","items":[{"url":"#411-creating-foreign-table","title":"4.1.1. Creating Foreign Table"},{"url":"#412-using-foreign-table","title":"4.1.2. Using Foreign Table"}]},{"url":"#42-fdw-processing-","title":"4.2. FDW Processing 🚀","items":[{"url":"#421-creating-a-query-tree","title":"4.2.1. Creating a Query Tree"},{"url":"#422-creating-a-plan-tree","title":"4.2.2. Creating a Plan Tree"},{"url":"#423-executing-the-remote-sql-statements","title":"4.2.3. Executing the Remote SQL Statements"}]},{"url":"#43-function-push-down-through-fdw-","title":"4.3. Function Push-down through FDW 🎾","items":[{"url":"#431-join-push-down-through-fdw","title":"4.3.1. Join Push-down through FDW"},{"url":"#432-sort-push-down-through-fdw","title":"4.3.2. Sort Push-down through FDW"},{"url":"#433-aggregate-function-push-down-through-fdw","title":"4.3.3. Aggregate Function Push-down through FDW"}]}]},"parent":{"relativePath":"postgresql-internals/chapter04.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/contents","title":"Introduction"}}},{"node":{"fields":{"slug":"/","title":"Introduction"}}},{"node":{"fields":{"slug":"/postgresql-tutorial","title":"PostgreSQL Tutorial"}}},{"node":{"fields":{"slug":"/postgresql-internals","title":"PostgreSQL Internals"}}},{"node":{"fields":{"slug":"/postgresql-internals/chapter01","title":"Chapter 1. Data Layout"}}},{"node":{"fields":{"slug":"/postgresql-internals/chapter02","title":"Chapter 2. Process And Memory Architecture"}}},{"node":{"fields":{"slug":"/postgresql-internals/chapter03","title":"Chapter 3. Query Processing"}}},{"node":{"fields":{"slug":"/postgresql-internals/chapter04","title":"Chapter 4. Foreign Data Wrappers"}}},{"node":{"fields":{"slug":"/postgresql-internals/chapter05","title":"Chapter 5. Concurrency Control"}}},{"node":{"fields":{"slug":"/postgresql-internals/chapter06","title":"Chapter 6. VACUUM Processing"}}},{"node":{"fields":{"slug":"/postgresql-internals/chapter07","title":"Chapter 7. Heap Only Tuple and Index-only Scans"}}},{"node":{"fields":{"slug":"/postgresql-internals/chapter08","title":"Chapter 8. Buffer Manager"}}},{"node":{"fields":{"slug":"/postgresql-internals/chapter09","title":"Chapter 9. Write Ahead Logging"}}},{"node":{"fields":{"slug":"/postgresql-internals/chapter10","title":"Chapter 10. Base Backup and Point-In-Time Recovery"}}},{"node":{"fields":{"slug":"/postgresql-internals/chapter11","title":"Chapter 11. Streaming Replication"}}},{"node":{"fields":{"slug":"/postgresql-tutorial/awesome-guide","title":"Awesome Guide for PostgreSQL Administrators!"}}}]}},"pageContext":{"id":"be8e952b-a05c-5cc9-96ba-a01f79a0343b"}},"staticQueryHashes":["222377516","2619113677","3706406642"]}